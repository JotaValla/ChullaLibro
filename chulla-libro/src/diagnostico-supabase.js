// Script simple para probar la conexi√≥n a Supabase
// Abre la consola del navegador para ver los logs

import { supabase } from './backend/client.js'

console.log('üîç === DIAGN√ìSTICO DE SUPABASE ===')

// 1. Verificar configuraci√≥n
console.log('üì° Configuraci√≥n:')
console.log('  URL:', import.meta.env.VITE_SUPABASE_URL)
console.log('  Key:', import.meta.env.VITE_SUPABASE_ANON_KEY ? 'DEFINIDA' : 'NO DEFINIDA')

// 2. Probar conexi√≥n simple
async function probarConexion() {
  try {
    console.log('\nüîó Probando conexi√≥n b√°sica...')
    const { data: testData, error: testError } = await supabase
      .from('categorias')
      .select('count')
    
    if (testError) {
      console.error('‚ùå Error en conexi√≥n b√°sica:', testError)
    } else {
      console.log('‚úÖ Conexi√≥n b√°sica exitosa')
    }
    
    // 3. Probar tabla libros
    console.log('\nüìö Probando tabla libros...')
    const { data: librosData, error: librosError } = await supabase
      .from('libros')
      .select('id, titulo, autor')
      .limit(3)
    
    if (librosError) {
      console.error('‚ùå Error al consultar libros:', {
        code: librosError.code,
        message: librosError.message,
        details: librosError.details,
        hint: librosError.hint
      })
    } else {
      console.log('‚úÖ Libros encontrados:', librosData?.length || 0)
      if (librosData && librosData.length > 0) {
        console.log('üìñ Primeros libros:')
        librosData.forEach((libro, index) => {
          console.log(`  ${index + 1}. ${libro.titulo} - ${libro.autor}`)
        })
      }
    }
    
    // 4. Probar consulta con JOIN
    console.log('\nüîó Probando consulta con JOIN (categorias)...')
    const { data: joinData, error: joinError } = await supabase
      .from('libros')
      .select(`
        id,
        titulo,
        autor,
        categorias (
          id,
          nombre,
          color
        )
      `)
      .limit(2)
    
    if (joinError) {
      console.error('‚ùå Error en JOIN:', {
        code: joinError.code,
        message: joinError.message,
        details: joinError.details,
        hint: joinError.hint
      })
    } else {
      console.log('‚úÖ JOIN exitoso, resultados:', joinData?.length || 0)
      if (joinData && joinData.length > 0) {
        console.log('üìä Datos con categor√≠as:')
        joinData.forEach((libro) => {
          console.log(`  - ${libro.titulo} (Categor√≠a: ${libro.categorias?.nombre || 'Sin categor√≠a'})`)
        })
      }
    }
    
  } catch (error) {
    console.error('üí• Error general:', error)
  }
}

// Ejecutar diagn√≥stico
probarConexion()

// Exportar funci√≥n para usar desde la consola
window.probarSupabase = probarConexion
